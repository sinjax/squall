<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE Document [
  <!ENTITY rif  	"http://www.w3.org/2007/rif#">
  <!ENTITY xs   	"http://www.w3.org/2001/XMLSchema#">
  <!ENTITY rdf  	"http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <!ENTITY rdfs		"http://www.w3.org/2000/01/rdf-schema#">
  <!ENTITY sib  	"http://www.ins.cwi.nl/sib/vocabulary/">
]>

<Document>
  <payload>
    <Group>
      <sentence>
  	    <Forall>
  	      <id>
  	      	<Const type="&rif;iri">http://www.ins.cwi.nl/sib/vocabulary/lsbench-rule-visited-by-tag</Const>
  	      </id>
  	      <meta>
  	      	<Frame>
  	      	  <object>
  	      	    <Const type="&rif;iri">http://www.ins.cwi.nl/sib/vocabulary/usertag</Const>
  	      	  </object>
  	      	  <slot ordered="yes">
  	      	    <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#subPropertyOf</Const>
  	      	    <Const type="&rif;iri">http://www.ins.cwi.nl/sib/vocabulary/visited</Const>
  	      	  </slot>
  	      	</Frame>
  	      </meta>
  	      <declare>
  	      	<Var>photo</Var>
  	      </declare>
  	      <declare>
  	      	<Var>user</Var>
  	      </declare>
  	      <formula>
  	      	<Implies>
  	      	  <if>
  	      	    <Frame>
	  	      	  <object>
	  	      	    <Var>photo</Var>
	  	      	  </object>
	  	      	  <slot ordered="yes">
	  	      	    <Const type="&rif;iri">http://www.ins.cwi.nl/sib/vocabulary/usertag</Const>
	  	      	    <Var>user</Var>
	  	      	  </slot>
	  	      	</Frame>
  	      	  </if>
  	      	  <then>
  	      	  	<Frame>
	  	      	  <object>
	  	      	    <Var>user</Var>
	  	      	  </object>
	  	      	  <slot ordered="yes">
	  	      	    <Const type="&rif;iri">http://www.ins.cwi.nl/sib/vocabulary/visited</Const>
	  	      	    <Var>photo</Var>
	  	      	  </slot>
	  	      	</Frame>
  	      	  </then>
  	      	</Implies>
  	      </formula>
  	    </Forall>
  	  </sentence>
  	  <sentence>
  	    <Forall>
  	      <id>
  	      	<Const type="&rif;iri">http://www.ins.cwi.nl/sib/vocabulary/lsbench-rule-visited-by-tracked</Const>
  	      </id>
  	      <meta>
  	      	<Frame>
  	      	  <object>
  	      	    <Const type="&rif;iri">http://www.ins.cwi.nl/sib/vocabulary/trackedAt</Const>
  	      	  </object>
  	      	  <slot ordered="yes">
  	      	    <Const type="&rif;iri">http://www.w3.org/2000/01/rdf-schema#subPropertyOf</Const>
  	      	    <Const type="&rif;iri">http://www.ins.cwi.nl/sib/vocabulary/visited</Const>
  	      	  </slot>
  	      	</Frame>
  	      </meta>
  	      <declare>
  	      	<Var>gps</Var>
  	      </declare>
  	      <declare>
  	      	<Var>user</Var>
  	      </declare>
  	      <formula>
  	      	<Implies>
  	      	  <if>
  	      	    <Frame>
	  	      	  <object>
	  	      	    <Var>user</Var>
	  	      	  </object>
	  	      	  <slot ordered="yes">
	  	      	    <Const type="&rif;iri">http://www.ins.cwi.nl/sib/vocabulary/trackedAt</Const>
	  	      	    <Var>gps</Var>
	  	      	  </slot>
	  	      	</Frame>
  	      	  </if>
  	      	  <then>
  	      	    <Frame>
	  	      	  <object>
	  	      	    <Var>user</Var>
	  	      	  </object>
	  	      	  <slot ordered="yes">
	  	      	    <Const type="&rif;iri">http://www.ins.cwi.nl/sib/vocabulary/visited</Const>
	  	      	    <Var>gps</Var>
	  	      	  </slot>
	  	      	</Frame>
  	      	  </then>
  	      	</Implies>
  	      </formula>
  	    </Forall>
  	  </sentence>
  	</Group>
  </payload>
</Document>

<!--
(* lsbench-rule-GPS-by-visited sib:visited[rdfs:range->sib:GPS] *)
Forall ?gps (
	?gps[rdf:type->sib:GPS] :- Exists ?user ( ?user[sib:visited->?gps])
)

(* lsbench-rule-User-by-visited sib:visited[rdfs:domain->sib:User] *)
Forall ?user (
	?user[rdf:type->sib:User] :- Exists ?user ( ?user[sib:visited->?gps])
)

(* lsbench-rule-Item-by-like sib:like[rdfs:range->sib:Item] *)
Forall ?item (
		?item[rdf:type->sib:Item] :- Exists ?user ( ?user[sib:like->?item])
)

(* lsbench-rule-User-by-like sib:like[rdfs:domain->sib:User] *)
Forall ?user (
		?user[rdf:type->sib:User] :- Exists ?item ( ?user[sib:like->?item])
)

(* lsbench-rule-Channel-by-container_of sib:container_of[rdfs:domain->sib:Channel] *)
Forall ?channel (
		?channel[rdf:type->sib:Channel] :- Exists ?item ( ?channel[sib:container_of->?item])
)

(* lsbench-rule-Item-by-container_of sib:container_of[rdfs:range->sib:Item] *)
Forall ?item (
		?item[rdf:type->sib:Item] :- Exists ?channel ( ?channel[sib:container_of->?item])
)

(* lsbench-rule-Channel-by-subscriber_of sib:subscriber_of[rdfs:range->sib:Channel] *)
Forall ?channel (
		?channel[rdf:type->sib:Channel] :- Exists ?user ( ?user[sib:subscriber_of->?channel])
)

(* lsbench-rule-User-by-subscriber_of sib:subscriber_of[rdfs:domain->sib:User] *)
Forall ?user (
		?user[rdf:type->sib:User] :- Exists ?channel ( ?user[sib:subscriber_of->?channel])
)

(* lsbench-rule-Channel-by-moderator_of sib:moderator_of[rdfs:range->sib:Channel] *)		NEEDS TO BE ABSTRACTED
Forall ?channel (
		?channel[rdf:type->sib:Channel] :- Exists ?user ( ?user[sib:moderator_of->?channel])
)

(* lsbench-rule-User-by-moderator_of sib:moderator_of[rdfs:domain->sib:User] *)
Forall ?user (
		?user[rdf:type->sib:User] :- Exists ?channel ( ?user[sib:moderator_of->?channel])
)



(* lsbench-rule-GPS-by-longlat
	And(
		sib:GPS[owl:equivalentClass->sib:MinOneLongditudeRestriction owl:equivalentClass->sib:MinOneLatitudeRestriction]
		sib:MinOneLongditudeRestriction[rdf:type->owl:Restriction owl:onProperty->dbpprop:longd owl:minCardinality->1]
		sib:MinOneLatitudeRestriction[rdf:type->owl:Restriction owl:onProperty->dbpprop:latd owl:minCardinality->1]
	)
*)
Forall ?gps (
	?gps[rdf:type->sib:GPS] :- Exists ?long ?lat ( ?gps[dbpprop:longd->?long dbpprop:latd->?lat])
)

(* lsbench-rule-same-long
	And(
		sib:GPS[owl:equivalentClass->sib:MaxOneLongditudeRestriction]
		sib:MaxOneLongditudeRestriction[rdf:type->owl:Restriction owl:onProperty->dbpprop:longd owl:maxCardinality->1]
	)
*)
Forall ?long1 ?long2 (
	?long1[owl:sameAs->?long2] :- Exists ?gps (
		?gps[dbpprop:longd->?long1 dbpprop:longd->?long2]
	)
)

(* lsbench-rule-same-lat
	And(
		sib:GPS[owl:equivalenClass->sib:MaxOneLatitudeRestriction]
		sib:MaxOneLatitudeRestriction[rdf:type->owl:Restriction owl:onProperty->dbpprop:latd owl:maxCardinality->1]
	)
*)
Forall ?lat1 ?lat2 (
	?lat1[owl:sameAs->?lat2] :- Exists ?gps (
		?gps[dbpprop:latd->?lat1 dbpprop:latd->?lat2]
	)
)
-->